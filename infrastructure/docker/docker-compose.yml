version: '3.8'

services:
  # Database
  postgres:
    image: postgres:16
    container_name: atlas-postgres
    environment:
      POSTGRES_DB: atlas_bank
      POSTGRES_USER: atlas
      POSTGRES_PASSWORD: atlas123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - atlas-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: atlas-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - atlas-network

  # Kafka Message Broker
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: atlas-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - atlas-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: atlas-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - atlas-network

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:latest
    container_name: atlas-redpanda
    ports:
      - "9092:9092"
    command:
      - redpanda
      - start
      - --kafka-addr
      - internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr
      - internal://redpanda:9092,external://localhost:9092
      - --pandaproxy-addr
      - internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr
      - internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr
      - internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr
      - redpanda:33145
      - --advertise-rpc-addr
      - redpanda:33145
      - --smp
      - '1'
      - --memory
      - 1G
      - --mode
      - dev-container
      - --default-log-level=info
    networks:
      - atlas-network

  # ClickHouse for Analytics
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: atlas-clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      CLICKHOUSE_DB: atlas_analytics
      CLICKHOUSE_USER: atlas_user
      CLICKHOUSE_PASSWORD: atlas_password
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./infrastructure/docker/clickhouse/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - atlas-network

  # Jaeger for Tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: atlas-jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      COLLECTOR_OTLP_ENABLED: true
    networks:
      - atlas-network

  # Grafana for Monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: atlas-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/docker/grafana/provisioning:/etc/grafana/provisioning
      - ./infrastructure/docker/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - atlas-network

  # Prometheus for Metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: atlas-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - atlas-network

  # OpenSearch for Logs (Optional)
  opensearch:
    image: opensearchproject/opensearch:latest
    container_name: atlas-opensearch
    ports:
      - "9200:9200"
      - "9600:9600"
    environment:
      - discovery.type=single-node
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    networks:
      - atlas-network

  ledgerapi:
    build: ../../src/Services/Atlas.Ledger
    environment:
      - ASPNETCORE_URLS=http://+:5181
      - ConnectionStrings__Ledger=Host=postgres;Port=5432;Database=atlas;Username=postgres;Password=postgres
      - KAFKA_BOOTSTRAP=redpanda:9092
    depends_on: [postgres, redpanda]
    ports: ["5181:5181"]

  paymentsapi:
    build: ../../src/Services/Atlas.Payments
    environment:
      - ASPNETCORE_URLS=http://+:5191
      - ConnectionStrings__Payments=Host=postgres;Port=5432;Database=atlas;Username=postgres;Password=postgres
      - Services__LedgerBaseUrl=http://ledgerapi:5181
      - KAFKA_BOOTSTRAP=redpanda:9092
    depends_on: [postgres, ledgerapi, redpanda]
    ports: ["5191:5191"]

  gateway:
    build: ../../src/Gateways/Atlas.ApiGateway
    environment: ["ASPNETCORE_URLS=http://+:5080"]
    depends_on: [ledgerapi, paymentsapi]
    ports: ["5080:5080"]

  amlworker:
    build: ../../src/KycAml/Atlas.KycAml.Worker
    environment:
      - KAFKA_BOOTSTRAP=redpanda:9092
      - Rules__Path=/app/config/rules/aml-rules.yaml
      - Topics__LedgerEvents=ledger-events
    volumes:
      - ../../config/rules:/app/config/rules:ro
    depends_on: [redpanda]

volumes:
  postgres_data:
  redis_data:
  kafka_data:
  clickhouse_data:
  grafana_data:
  prometheus_data:
  opensearch_data:

networks:
  atlas-network:
    driver: bridge
